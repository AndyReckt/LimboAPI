import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'java'
    id 'checkstyle'
}

apply plugin: 'org.cadixdev.licenser'
apply from: '../gradle/checkstyle.gradle'
apply plugin: 'com.github.johnrengelman.shadow'

license {
    matching(includes: ['**/limboapi/config/helpers/**']) {
        header = project.rootProject.file('HEADER_BUNGEECORD.txt')
    }
    matching(includes: ['**/mcprotocollib/**']) {
        header = project.rootProject.file('HEADER_MCPROTOCOLLIB.txt')
    }
    matching(includes: ['**/FakeLoginSessionHandler.java']) {
        header = project.rootProject.file('HEADER_MIXED.txt')
    }
    header = project.rootProject.file('HEADER.txt')
}

dependencies {
    implementation project(':limboapi-api')
    implementation 'org.bstats:bstats-velocity:2.2.1'

    annotationProcessor 'com.velocitypowered:velocity-api:3.0.0-SNAPSHOT'

    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    testCompileOnly 'org.projectlombok:lombok:1.18.20'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'

    compileOnly 'com.github.spotbugs:spotbugs-annotations:4.1.2'
}

task processSources(type: Sync) {
    from sourceSets.main.java.srcDirs
    inputs.property 'version', version
    filter ReplaceTokens, tokens: [version: version]
    into "$buildDir/src"
}

shadowJar {
    relocate 'org.bstats', 'net.elytrium.limboapi.bstats'
}

tasks.withType(Checkstyle) {
    exclude('**/net/elytrium/limboapi/config/Settings.java')
    exclude('**/net/elytrium/limboapi/protocol/packet/**') // Member Name
    exclude('**/net/elytrium/limboapi/protocol/util/**') // Local Variable Name
    exclude('**/net/elytrium/limboapi/server/world/chunk/**') // Local Variable Name
}

compileJava.source = processSources.outputs
